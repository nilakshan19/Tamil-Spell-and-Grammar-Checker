# -*- coding: utf-8 -*-
"""machine learning grammar checking .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bV6DHvrTYDliNw0VcHRbylk0ID6AkENp
"""

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score

# Load the dataset
df = pd.read_excel('/content/drive/MyDrive/tamildataset.xlsx')

df.head()

# Check for missing values and drop them
print("Missing values in each column:")
print(df.isnull().sum())
df = df.dropna()

# Split the data into features and target
X = df['Ungrammatical Statement']  # Ungrammatical Tamil statements
y = df['Standard Tamil']  # Corrected Tamil statements

# Vectorize the input text using character n-grams
vectorizer = CountVectorizer(ngram_range=(1, 2), analyzer='char', token_pattern=None)
X_vectorized = vectorizer.fit_transform(X)

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X_vectorized, y, test_size=0.2, random_state=42)

# Initialize and train the model
model = MultinomialNB()
model.fit(X_train, y_train)

# Make predictions on the test set
y_pred = model.predict(X_test)

# Evaluate the model's accuracy
accuracy = accuracy_score(y_test, y_pred)
print(f"Model Accuracy: {accuracy * 100:.2f}%")

from sklearn.metrics import classification_report

# Generate the classification report
report = classification_report(y_test, y_pred)
print("Classification Report:")
print(report)

# Test the model with a new sentence
test_sentence = ["அவள் வேலை செய்தான்."]
test_vector = vectorizer.transform(test_sentence)
predicted = model.predict(test_vector)

# Display the result
print("Ungrammatical Sentence:", test_sentence[0])
print("Predicted Standard Tamil:", predicted[0])

# Test the model with a new sentence
test_sentence = ["அவள் கதை சொன்னான்."]
test_vector = vectorizer.transform(test_sentence)
predicted = model.predict(test_vector)

# Display the result
print("Ungrammatical Sentence:", test_sentence[0])
print("Predicted Standard Tamil:", predicted[0])

# Test the model with a new sentence
test_sentence = ["அவள் புத்தகம் படித்தான்."]
test_vector = vectorizer.transform(test_sentence)
predicted = model.predict(test_vector)

# Display the result
print("Ungrammatical Sentence:", test_sentence[0])
print("Predicted Standard Tamil:", predicted[0])

# Test the model with a new sentence
test_sentence = ["அவன் தன்னை அழைத்தாள்."]
test_vector = vectorizer.transform(test_sentence)
predicted = model.predict(test_vector)

# Display the result
print("Ungrammatical Sentence:", test_sentence[0])
print("Predicted Standard Tamil:", predicted[0])

# Test the model with a new sentence
test_sentence = ["நான் நாளை பாடம் படிக்கிறேன்."]
test_vector = vectorizer.transform(test_sentence)
predicted = model.predict(test_vector)

# Display the result
print("Ungrammatical Sentence:", test_sentence[0])
print("Predicted Standard Tamil:", predicted[0])